{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Tools.jsx\";\nimport React from 'react';\nimport Upload from './Upload';\nimport TextEditor from './TextEditor';\nimport { Grid, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Tools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleText: \"\"\n    };\n    this.handleResultChange = this.handleResultChange.bind(this);\n  }\n\n  handleResultChange(data) {\n    this.setState({\n      sampleText: data\n    });\n  }\n\n  render() {\n    var text = JSON.parse(this.state.sampleText);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Tools;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Tools.jsx"],"names":["React","Upload","TextEditor","Grid","Icon","Menu","Segment","Tools","Component","constructor","props","state","sampleText","handleResultChange","bind","data","setState","render","text","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,OAA3B,QAA0C,mBAA1C;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACE,IAAD,EAAO;AACvB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAEG;AADA,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKT,KAAL,CAAWC,UAAtB,CAAX;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAzBiC;;AA4BpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport Upload from './Upload';\nimport TextEditor from './TextEditor';\nimport { Grid, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Tools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleText: \"\"\n    };\n    this.handleResultChange = this.handleResultChange.bind(this);\n  }\n\n  handleResultChange(data) {\n    this.setState({\n      sampleText: data\n    });\n  }\n\n  render() {\n    var text = JSON.parse(this.state.sampleText);\n    \n\n    return (\n      <div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Tools;"]},"metadata":{},"sourceType":"module"}