{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/QuoteBank.jsx\";\nimport React, { useRef } from 'react';\nimport { Card, Button, Segment, Grid, Header, Icon } from 'semantic-ui-react';\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob(this.state.quotes.map(quote => quote.value + \"\\n\\n\"), {\n        type: 'text/plain'\n      });\n      console.log(this.state.quotes);\n      element.href = URL.createObjectURL(file);\n      element.download = \"transcript.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.state = {\n      count: 0,\n      quotes: [],\n      uploaded: \"false\"\n    };\n    this.addQuote = this.addQuote.bind(this);\n  }\n\n  addQuote() {\n    var selection = window.getSelection().toString();\n    const newQuote = {\n      'id': this.state.count + 1,\n      'value': selection\n    };\n    console.log(newQuote);\n    this.setState({\n      quotes: [...this.state.quotes, newQuote],\n      count: this.state.count + 1\n    });\n  }\n\n  delete(item) {\n    const quotes = this.state.quotes.filter(i => i !== item);\n    this.setState({\n      quotes\n    });\n    console.log(\"item: \" + item.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      padded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Quote Bank\"), React.createElement(\"div\", {\n      className: \"right-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      size: \"mini\",\n      onClick: this.downloadTxtFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share square outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      onClick: this.addQuote,\n      className: \"green-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Add Highlight\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.quotes.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Highlight quotes and add them here\"), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.quotes.map(quote => React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, quote.value, React.createElement(Button, {\n      basic: true,\n      icon: true,\n      color: \"red\",\n      size: \"mini\",\n      floated: \"right\",\n      onClick: this.delete.bind(this, quote),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/QuoteBank.jsx"],"names":["React","useRef","Card","Button","Segment","Grid","Header","Icon","News","Component","constructor","props","downloadTxtFile","element","document","createElement","file","Blob","state","quotes","map","quote","value","type","console","log","href","URL","createObjectURL","download","body","appendChild","click","count","uploaded","addQuote","bind","selection","window","getSelection","toString","newQuote","setState","delete","item","filter","i","id","render","display","flexDirection","justifyContent","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,IAA9C,QAA0D,mBAA1D;AAEA,eAAe,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0BnBC,eA1BmB,GA0BD,MAAM;AACtB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,MAAhD,CAAT,EAAmE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAnE,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,MAAvB;AACAN,MAAAA,OAAO,CAACa,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBZ,IAApB,CAAf;AACAH,MAAAA,OAAO,CAACgB,QAAR,GAAmB,gBAAnB;AACAf,MAAAA,QAAQ,CAACgB,IAAT,CAAcC,WAAd,CAA0BlB,OAA1B,EANsB,CAMc;;AACpCA,MAAAA,OAAO,CAACmB,KAAR;AACD,KAlCkB;;AAEjB,SAAKd,KAAL,GAAa;AACXe,MAAAA,KAAK,EAAE,CADI;AAEXd,MAAAA,MAAM,EAAE,EAFG;AAGXe,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,GAAG;AACT,QAAIE,SAAS,GAAGC,MAAM,CAACC,YAAP,GAAsBC,QAAtB,EAAhB;AACA,UAAMC,QAAQ,GAAG;AAAE,YAAM,KAAKvB,KAAL,CAAWe,KAAX,GAAmB,CAA3B;AAA8B,eAASI;AAAvC,KAAjB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACA,SAAKC,QAAL,CAAc;AACZvB,MAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,EAAuBsB,QAAvB,CADI;AAEZR,MAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWe,KAAX,GAAmB;AAFd,KAAd;AAID;;AAEDU,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMzB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkB0B,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,KAAKF,IAApC,CAAf;AACA,SAAKF,QAAL,CAAc;AAAEvB,MAAAA;AAAF,KAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWmB,IAAI,CAACG,EAA5B;AACD;;AAYDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,KAAlC;AAAyCC,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKvC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwD,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxD,CADF,CAFF,CADF,EAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKuB,QAAtB;AAAgC,MAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,CADF,CADF,EAYE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiC,MAAlB,KAA6B,CAA7B,IAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADnC,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IACrB,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBA,KAAK,CAACC,KAAzB,EACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,MAAlB;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,OAAO,EAAC,OAAnD;AAA2D,MAAA,OAAO,EAAE,KAAKqB,MAAL,CAAYP,IAAZ,CAAiB,IAAjB,EAAuBf,KAAvB,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,CADD,CADH,CAFF,CADF,CAZF,CADF,CADF;AAmCD;;AAzE+C","sourcesContent":["import React, {useRef} from 'react';\nimport { Card, Button, Segment, Grid, Header, Icon } from 'semantic-ui-react'\n\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      quotes: [],\n      uploaded: \"false\",\n    };\n    this.addQuote = this.addQuote.bind(this)\n  }\n\n  addQuote() {\n    var selection = window.getSelection().toString();\n    const newQuote = { 'id': this.state.count + 1, 'value': selection };\n    console.log(newQuote);\n    this.setState({\n      quotes: [...this.state.quotes, newQuote],\n      count: this.state.count + 1\n    });\n  }\n\n  delete(item) {\n    const quotes = this.state.quotes.filter(i => i !== item)\n    this.setState({ quotes })\n    console.log(\"item: \" + item.id)\n  }\n\n  downloadTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob(this.state.quotes.map((quote) => (quote.value + \"\\n\\n\")), { type: 'text/plain' });\n    console.log(this.state.quotes)\n    element.href = URL.createObjectURL(file);\n    element.download = \"transcript.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid padded>\n          <Grid.Row>\n            <Grid.Column>\n              <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                <Header as='h3'>Quote Bank</Header>\n                <div className=\"right-btn\">\n                  <Button icon size='mini' onClick={this.downloadTxtFile}><Icon name='share square outline icon' /></Button>\n                </div>\n              </div>\n              <Button onClick={this.addQuote} className=\"green-btn\">Add Highlight</Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n            {this.state.quotes.length === 0 && <p>Highlight quotes and add them here</p>}\n              <Card.Group>\n                {this.state.quotes.map((quote) => (\n                  <Card fluid>\n                    <Card.Content>\n                      <Card.Description>{quote.value}\n                        <Button basic icon color='red' size=\"mini\" floated='right' onClick={this.delete.bind(this, quote)}>\n                          <Icon name='trash alternate outline' />\n                        </Button>\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                ))}\n              </Card.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}