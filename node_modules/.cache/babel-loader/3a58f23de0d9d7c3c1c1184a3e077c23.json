{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Upload.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.state = {\n      imageURL: '',\n      imageText: ''\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    data.append('filename', this.fileName.value);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: JSON.stringify(body.text)\n        });\n      });\n    });\n    console.log(this.state.imageText);\n    this.props.onDataFetched(this.state.imageText);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleUploadImage,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => {\n        this.fileName = ref;\n      },\n      type: \"text\",\n      placeholder: \"File name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"ui button\",\n      class: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"upload icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" Upload\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.imageText));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Upload.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Main","Component","constructor","props","fileInputRef","createRef","state","imageURL","imageText","handleUploadImage","bind","ev","preventDefault","data","FormData","append","uploadInput","files","fileName","value","fetch","method","body","then","response","json","console","log","setState","filename","JSON","stringify","text","onDataFetched","render","ref"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n      imageText: '',\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    data.append('filename', this.fileName.value);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: JSON.stringify(body.text),\n        });\n      });\n    });\n    console.log(this.state.imageText);\n    this.props.onDataFetched(this.state.imageText);\n    \n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleUploadImage} encType=\"multipart/form-data\">\n        <div>\n          {/* https://benmarshall.me/styling-file-inputs/ */}\n          {/* with this code I'm unable to save the chosen files on my computer, get error \n          <Button as=\"label\" htmlFor=\"file\">\n            Choose File\n          </Button>\n          <input hidden type=\"file\" id=\"file\" onChange={this.uploadInput} />\n          */}\n          <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\n        </div>\n        <div>\n          <div class=\"ui input\">\n            <input ref={(ref) => { this.fileName = ref; }} type=\"text\" placeholder=\"File name\" />\n          </div>\n        </div>\n        <br />\n        <div>\n          <button type=\"submit\" class=\"ui button\" class=\"ui blue button\">\n            <i class=\"upload icon\"></i> Upload\n            </button>\n        </div>\n\n        <p>{this.state.imageText}</p>\n\n      </form>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}