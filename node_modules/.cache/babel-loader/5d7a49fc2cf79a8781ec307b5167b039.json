{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob(this.props.audioText.map(item => item + \"\\n\"), {\n        type: 'text/plain'\n      });\n      console.log(this.props.quotes);\n      element.href = URL.createObjectURL(file);\n      element.download = \"transcript.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.state = {};\n    this.playWord = this.playWord.bind(this);\n    this.editTranscript = this.editTranscript.bind(this);\n  }\n\n  editTranscript(e, index) {\n    console.log(e.target.textContent);\n    let tmpArr = this.props.audioText;\n\n    if (index % 2 === 1) {\n      // second speaker\n      tmpArr[index] = \"2:: \" + e.target.textContent;\n    } else {\n      tmpArr[index] = \"1:: \" + e.target.textContent;\n    }\n\n    this.setState({\n      audioText: tmpArr\n    });\n    console.log(\"after setstate: \" + this.props.audioText);\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.props.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = -1;\n    return React.createElement(\"div\", {\n      className: \"transcript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"no-border\",\n      style: {\n        overflow: 'auto',\n        maxHeight: '90vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"div\", {\n      className: \"right-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      size: \"mini\",\n      onClick: this.downloadTxtFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share square outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), React.createElement(\"form\", {\n      onSubmit: this.handleUploadAudio,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \", this.props.uploaded == \"false\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"hidden-new-audio-file\",\n      class: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Upload Audio\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-audio-file\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.props.handleUploadAudio // changed to call props\n      ,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.audioText.map((item, index) => {\n      if (item.includes(\"2:: \") && item.substring(4, item.length) != \"\") return React.createElement(\"li\", {\n        key: index,\n        className: \"speaker-red\",\n        contentEditable: \"true\",\n        suppressContentEditableWarning: \"true\",\n        onBlur: e => this.editTranscript(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        onClick: this.playWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \" + word)));else return React.createElement(\"li\", {\n        key: index,\n        className: \"speaker-yellow\",\n        contentEditable: \"true\",\n        onBlur: e => this.editTranscript(e, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        onClick: this.playWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, word + \" \")));\n    }), React.createElement(\"div\", {\n      id: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"TEST LINK HERE\"))), console.log(\"AFTER MAP \" + this.props.audioText)), React.createElement(\"audio\", {\n      id: \"audio-player\",\n      controls: true,\n      src: this.props.audioURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Your browser does not support the\", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"audio\"), \" element.\")));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Main","Component","constructor","props","fileInputRef","createRef","downloadTxtFile","element","document","createElement","file","Blob","audioText","map","item","type","console","log","quotes","href","URL","createObjectURL","download","body","appendChild","click","state","playWord","bind","editTranscript","e","index","target","textContent","tmpArr","setState","event","id","timestamps","render","indexNumber","overflow","maxHeight","display","flexDirection","justifyContent","title","handleUploadAudio","uploaded","ref","uploadInput","includes","substring","length","trim","split","word","audioURL"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n    this.playWord = this.playWord.bind(this);\n\n    this.editTranscript= this.editTranscript.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n\n  editTranscript(e, index) {\n    console.log(e.target.textContent);\n    let tmpArr = this.props.audioText;\n  \n    if (index % 2 === 1) { // second speaker\n      tmpArr[index] = \"2:: \" + e.target.textContent;\n    }\n    else {\n      tmpArr[index] = \"1:: \" + e.target.textContent;\n    }\n    this.setState({ audioText: tmpArr})\n    console.log(\"after setstate: \" + this.props.audioText)\n  }\n\n\n  downloadTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob(this.props.audioText.map((item) => (item + \"\\n\")), { type: 'text/plain' });\n    console.log(this.props.quotes)\n    element.href = URL.createObjectURL(file);\n    element.download = \"transcript.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.props.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = -1;\n\n    return (\n      <div className=\"transcript\">\n        <Segment className=\"no-border\" style={{ overflow: 'auto', maxHeight: '90vh' }}>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            <h2>{this.props.title}</h2>\n            <div className=\"right-btn\">\n              <Button icon size='mini' onClick={this.downloadTxtFile}><Icon name='share square outline icon' /></Button>\n            </div>\n          </div>\n          <form onSubmit={this.handleUploadAudio} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n            {this.props.uploaded == \"false\" && <div>\n\n              <label for=\"hidden-new-audio-file\" class=\"ui button\">\n                Upload Audio\n          </label>\n              <input type=\"file\" id=\"hidden-new-audio-file\"\n                ref={(ref) => { this.uploadInput = ref; }}\n                onChange={this.props.handleUploadAudio} // changed to call props\n                style={{ display: \"none\" }}>\n              </input>\n            </div>\n            }\n            <br />\n            <ul>\n            <div>\n              {this.props.audioText.map((item, index) => {\n                if ((item.includes(\"2:: \")) && item.substring(4, item.length) != \"\")\n                  return (<li key={index} className=\"speaker-red\" contentEditable=\"true\" suppressContentEditableWarning=\"true\" onBlur={(e) => this.editTranscript(e, index)}>\n                    {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++} onClick={this.playWord}>{\" \" + word}</span>)}\n                  </li>)\n                else\n                  return (<li key={index} className=\"speaker-yellow\" contentEditable=\"true\" onBlur={(e) => this.editTranscript(e, index)}>\n                    {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++} onClick={this.playWord}>{word + \" \"}</span>)}\n              </li>)\n              })}\n              <div id=\"tag\">TEST LINK HERE</div>\n              </div>\n            </ul>\n            {console.log(\"AFTER MAP \" + this.props.audioText)}\n            {/*}\n        <ul>\n          {Object.keys(this.state.imageText).map(key =>\n            <li>{key} - {this.state.imageText[key]}</li>\n          )\n          }\n\n        </ul>\n        */}\n          </form>\n          <audio id=\"audio-player\" controls\n            src={this.props.audioURL}>\n            Your browser does not support the\n              <code>audio</code> element.\n              </audio>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}