{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/News.jsx\";\nimport React from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      refreshing: true\n    };\n  } // Called after a component is mounted\n\n\n  componentDidMount() {\n    var url = 'https://newsapi.org/v2/everything?q=apple&apiKey=3260f1f5672447929f1fb8f3ec7199f4';\n    fetch(url).then(result => result.json()).then(result => {\n      this.setState({\n        articles: result.articles,\n        refreshing: false\n      });\n    });\n  }\n\n  handleRefresh() {\n    this.setState({\n      refreshing: true\n    }, () => this.fetchNews());\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.articles.map(item => React.createElement(Article, {\n      title: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction Article(props) {\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\",\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Daniel\"), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Joined in 2016\"), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Daniel is a comedian living in Nashville.\")), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"10 Friends\")));\n}","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/News.jsx"],"names":["React","Card","Icon","Image","News","Component","constructor","props","state","articles","refreshing","componentDidMount","url","fetch","then","result","json","setState","handleRefresh","fetchNews","render","map","item","title","Article"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAb;AACD,GAJ+C,CAKhD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,GAAG,GAAG,mFAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,WAAKE,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEM,MAAM,CAACN,QADL;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID,KAPH;AASD;;AACDQ,EAAAA,aAAa,GAAG;AACd,SAAKD,QAAL,CACE;AACEP,MAAAA,UAAU,EAAE;AADd,KADF,EAIE,MAAM,KAAKS,SAAL,EAJR;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAyBC,IAAD,IAAU,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,IAAI,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CADH,CADF;AAKD;;AAjC+C;;AAoClD,SAASC,OAAT,CAAiBjB,KAAjB,EAAwB;AACtB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,8DAAX;AAA0E,IAAA,OAAO,MAAjF;AAAkF,IAAA,EAAE,EAAE,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAHF,CAFA,EASA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADF,CATA,CADF;AAkBD","sourcesContent":["import React from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { articles: [], refreshing: true };\n  }\n  // Called after a component is mounted\n  componentDidMount() {\n    var url = 'https://newsapi.org/v2/everything?q=apple&apiKey=3260f1f5672447929f1fb8f3ec7199f4'\n    fetch(url)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          articles: result.articles,\n          refreshing: false,\n        });\n      }\n      )\n  }\n  handleRefresh() {\n    this.setState(\n      {\n        refreshing: true\n      },\n      () => this.fetchNews()\n    );\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.articles.map((item) => <Article title={item.title} />)}\n      </ul>\n    );\n  }\n}\n\nfunction Article(props) {\n  return (\n    <Card>\n    <Image src='https://react.semantic-ui.com/images/avatar/large/daniel.jpg' wrapped ui={false} />\n    <Card.Content>\n      <Card.Header>Daniel</Card.Header>\n      <Card.Meta>Joined in 2016</Card.Meta>\n      <Card.Description>\n        Daniel is a comedian living in Nashville.\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name='user' />\n        10 Friends\n      </a>\n    </Card.Content>\n  </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}