{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Tools.jsx\";\nimport React from 'react';\nimport Upload from './Upload';\nimport TextEditor from './TextEditor';\nimport { Grid, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Tools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleText: \"Upload your audio file and an image of your notes\"\n    };\n    this.handleResultChange = this.handleResultChange.bind(this);\n  }\n\n  handleResultChange(data) {\n    this.setState({\n      sampleText: data\n    });\n  }\n\n  render() {\n    var text = this.state.sampleText; // JSON.parse(this.state.sampleText);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      style: {\n        margin: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"ui sidebar inverted vertical menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"a\", {\n      class: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"a\", {\n      class: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"3\")), React.createElement(\"div\", {\n      class: \"pusher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      stretched: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.sampleText)), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      onDataFetched: this.handleResultChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"2\")))));\n  }\n\n}\n\nexport default Tools;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Tools.jsx"],"names":["React","Upload","TextEditor","Grid","Icon","Menu","Segment","Tools","Component","constructor","props","state","sampleText","handleResultChange","bind","data","setState","render","text","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,OAA3B,QAA0C,mBAA1C;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACE,IAAD,EAAO;AACvB,SAAKC,QAAL,CAAc;AACZJ,MAAAA,UAAU,EAAEG;AADA,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,KAAKP,KAAL,CAAWC,UAAtB,CADO,CAC2B;;AAGlC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,MAAzB;AAA0B,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,KAAK,EAAC,mCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADI,EAIJ;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJI,EAOJ;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPI,CAFA,EAaN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbM,EAgBE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU,KAAKR,KAAL,CAAWC,UAArB,CADF,CADF,EAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAE,KAAKC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CALF,CAhBF,CADF,CADF;AAkCD;;AArDiC;;AAwDpC,eAAeN,KAAf","sourcesContent":["import React from 'react';\nimport Upload from './Upload'\nimport TextEditor from './TextEditor'\nimport { Grid, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Tools extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleText: \"Upload your audio file and an image of your notes\"\n    };\n    this.handleResultChange = this.handleResultChange.bind(this);\n  }\n\n  handleResultChange(data) {\n    this.setState({\n      sampleText: data\n    });\n  }\n\n  render() {\n    var text = this.state.sampleText; // JSON.parse(this.state.sampleText);\n    \n\n    return (\n      <div>\n        <Grid columns={2} divided style={{ margin: '10px' }}>\n\n        <div class=\"ui sidebar inverted vertical menu\">\n    <a class=\"item\">\n      1\n    </a>\n    <a class=\"item\">\n      2\n    </a>\n    <a class=\"item\">\n      3\n    </a>\n  </div>\n  <div class=\"pusher\">\n  </div>\n\n          <Grid.Row stretched>\n            <Grid.Column width={10}>\n              <Segment>{this.state.sampleText}</Segment>\n              {/*<TextEditor />  ADD  BACK IN WHEN READY */}\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Segment>\n                <Upload onDataFetched={this.handleResultChange} />\n              </Segment>\n              <Segment>2</Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default Tools;"]},"metadata":{},"sourceType":"module"}