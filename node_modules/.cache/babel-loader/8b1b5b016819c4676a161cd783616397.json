{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/TextEditor.jsx\";\n// Import React!\nimport React from 'react';\nimport { Form, TextArea } from 'semantic-ui-react'; // Define our app...\n\nclass TextEditor extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = ({\n      value\n    }) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  // Render the editor.\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TextEditor;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/TextEditor.jsx"],"names":["React","Form","TextArea","TextEditor","Component","onChange","value","setState","render","state","handleChange"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B,C,CAEA;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAEvCC,QAFuC,GAE5B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACxB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAJsC;AAAA;;AAMvC;AACAE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWH,KAFlB;AAGA,MAAA,QAAQ,EAAE,KAAKI,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADF;AAWD;;AAnBsC;;AAsBzC,eAAeP,UAAf","sourcesContent":["// Import React!\nimport React from 'react'\nimport { Form, TextArea } from 'semantic-ui-react'\n\n// Define our app...\nclass TextEditor extends React.Component {\n\n  onChange = ({ value }) => {\n    this.setState({ value })\n  }\n\n  // Render the editor.\n  render() {\n    return (\n      <div>\n        <Form>\n        <input\n        type=\"text\"\n        value={this.state.value}\n        onChange={this.handleChange}\n      />\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default TextEditor;"]},"metadata":{},"sourceType":"module"}