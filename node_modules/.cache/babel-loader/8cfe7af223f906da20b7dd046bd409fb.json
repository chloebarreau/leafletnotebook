{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.state = {\n      audioURL: '',\n      audioText: [],\n      timestamps: [],\n      uploaded: \"false\"\n    };\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n    this.playWord = this.playWord.bind(this);\n  }\n\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text,\n          timestamps: body.timestamps,\n          uploaded: \"true\"\n        });\n        this.props.onDataFetched(body.filename);\n        {\n          /* send audio's filename to Tools component */\n        }\n        console.log(\"Video transcript: \" + this.state.audioText);\n        console.log(\"Timestamps: \" + this.state.timestamps);\n      });\n    });\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.state.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = -1;\n    var aud = document.getElementById(\"auioPlayer\");\n    return React.createElement(\"div\", {\n      className: \"transcript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"no-border\",\n      style: {\n        overflow: 'auto',\n        maxHeight: '90vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"div\", {\n      className: \"right-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      size: \"mini\",\n      onClick: this.downloadTxtFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share square outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))), React.createElement(\"form\", {\n      onSubmit: this.handleUploadAudio,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", this.state.uploaded == \"false\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"hidden-new-audio-file\",\n      class: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Upload Audio\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-audio-file\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.handleUploadAudio,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.audioText.map(item => {\n      console.log(indexNumber);\n      if (item.includes(\"2::\") && item.substring(4, item.length) != \"\") return React.createElement(\"li\", {\n        className: \"speaker-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        onClick: this.playWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, word + \" \", console.log(indexNumber + \" \" + word))));else return React.createElement(\"li\", {\n        className: \"speaker-yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        onClick: this.playWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, word + \" \", console.log(indexNumber + \" \" + word))));\n    }))), React.createElement(\"audio\", {\n      id: \"audio-player\",\n      controls: true,\n      src: this.state.audioURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Your browser does not support the\", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"audio\"), \" element.\")));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Main","Component","constructor","props","fileInputRef","createRef","state","audioURL","audioText","timestamps","uploaded","handleUploadAudio","bind","playWord","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","console","log","text","setState","filename","onDataFetched","event","id","target","render","indexNumber","aud","document","getElementById","overflow","maxHeight","display","flexDirection","justifyContent","title","downloadTxtFile","ref","map","item","includes","substring","length","trim","split","word"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      audioURL: '',\n      audioText: [],\n      timestamps: [],\n      uploaded: \"false\",\n    };\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n    this.playWord = this.playWord.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text,\n          timestamps: body.timestamps,\n          uploaded: \"true\"\n        });\n        this.props.onDataFetched(body.filename); {/* send audio's filename to Tools component */ }\n\n        console.log(\"Video transcript: \" + this.state.audioText);\n        console.log(\"Timestamps: \" + this.state.timestamps);\n      });\n    });\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.state.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = -1;\n\n    var aud = document.getElementById(\"auioPlayer\");\n\n\n    return (\n      <div className=\"transcript\">\n        <Segment className=\"no-border\" style={{ overflow: 'auto', maxHeight: '90vh' }}>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            <h2>{this.props.title}</h2>\n            <div className=\"right-btn\">\n              <Button icon size='mini' onClick={this.downloadTxtFile}><Icon name='share square outline icon' /></Button>\n            </div>\n          </div>\n          <form onSubmit={this.handleUploadAudio} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n            {this.state.uploaded == \"false\" && <div>\n\n              <label for=\"hidden-new-audio-file\" class=\"ui button\">\n                Upload Audio\n          </label>\n              <input type=\"file\" id=\"hidden-new-audio-file\"\n                ref={(ref) => { this.uploadInput = ref; }}\n                onChange={this.handleUploadAudio}\n                style={{ display: \"none\" }}>\n              </input>\n            </div>\n            }\n            <br />\n            <ul>\n              {this.state.audioText.map((item) => {\n                console.log(indexNumber)\n                if (item.includes(\"2::\") && item.substring(4, item.length) != \"\")\n                  return (<li className=\"speaker-red\">\n                    {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++} onClick={this.playWord}>{word + \" \"}{console.log(indexNumber + \" \" + word)}</span>)}\n                  </li>)\n                else\n                  return (<li className=\"speaker-yellow\">\n                    {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++} onClick={this.playWord}>{word + \" \"}{console.log(indexNumber + \" \" + word)}</span>)}\n                  </li>)\n              })}\n            </ul>\n            {/*}\n        <ul>\n          {Object.keys(this.state.imageText).map(key =>\n            <li>{key} - {this.state.imageText[key]}</li>\n          )\n          }\n\n        </ul>\n        */}\n          </form>\n          <audio id=\"audio-player\" controls\n            src={this.state.audioURL}>\n            Your browser does not support the\n              <code>audio</code> element.\n              </audio>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}