{"ast":null,"code":"var _jsxFileName = \"/Users/chloebarreau/Downloads/leafletnotebook/src/components/TextEditor.jsx\";\n// Import React!\nimport React from 'react';\nimport { Form, TextArea } from 'semantic-ui-react';\nimport { EditorState, Editor, RichUtils } from 'draft-js';\nimport { FontAwesomeIcon } from \"react-fontawesome\";\nimport { faBold, faUnderline, faItalic, faAnchor } from \"free-solid-svg-icons\";\nconst inlineStyles = [{\n  label: \"bold\",\n  style: \"BOLD\",\n  icon: React.createElement(FontAwesomeIcon, {\n    icon: faBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })\n}, {\n  label: \"italic\",\n  style: \"ITALIC\",\n  icon: React.createElement(FontAwesomeIcon, {\n    icon: faItalic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })\n}, {\n  label: \"Underline\",\n  style: \"UNDERLINE\",\n  icon: React.createElement(FontAwesomeIcon, {\n    icon: faUnderline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })\n}];\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      editorState: EditorState.createEmpty()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  updateEditorState(editorState) {\n    this.setState({\n      editorState\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n  } // Render the editor.\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"editor-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this._onBoldClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Bold\"), React.createElement(Editor, {\n      placeholder: \"some text\",\n      editorState: this.state.editorState,\n      onChange: this.updateEditorState.bind(this),\n      handleKeyCommand: this.handleKeyCommand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TextEditor;","map":{"version":3,"sources":["/Users/chloebarreau/Downloads/leafletnotebook/src/components/TextEditor.jsx"],"names":["React","Form","TextArea","EditorState","Editor","RichUtils","FontAwesomeIcon","faBold","faUnderline","faItalic","faAnchor","inlineStyles","label","style","icon","TextEditor","Component","constructor","props","state","value","editorState","createEmpty","handleChange","bind","handleKeyCommand","updateEditorState","setState","event","target","_onBoldClick","onChange","toggleInlineStyle","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA8C,UAA9C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SACEC,MADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,QAJF,QAKO,sBALP;AAOA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,IAAI,EAAE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,CADmB,EAMnB;AACEK,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,IAAI,EAAE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,CANmB,EAWnB;AACEG,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,IAAI,EAAE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,CAXmB,CAArB;;AAkBA,MAAMO,UAAN,SAAyBf,KAAK,CAACgB,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,WAAW,EAAElB,WAAW,CAACmB,WAAZ;AAFF,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDE,EAAAA,iBAAiB,CAACL,WAAD,EAAa;AAC5B,SAAKM,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACD;;AAEDE,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAClB,SAAKD,QAAL,CAAc;AAACP,MAAAA,KAAK,EAAEQ,KAAK,CAACC,MAAN,CAAaT;AAArB,KAAd;AACD;;AAEDU,EAAAA,YAAY,GAAG;AACb,SAAKC,QAAL,CAAc1B,SAAS,CAAC2B,iBAAV,CAA4B,KAAKb,KAAL,CAAWE,WAAvC,EAAoD,MAApD,CAAd;AACD,GAtBsC,CAuBvC;;;AACAY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKH,YAAL,CAAkBN,IAAlB,CAAuB,IAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWE,WAF1B;AAGE,MAAA,QAAQ,EAAE,KAAKK,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAHZ;AAIE,MAAA,gBAAgB,EAAE,KAAKC,gBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAeD;;AAxCsC;;AA2CzC,eAAeV,UAAf","sourcesContent":["// Import React!\nimport React from 'react'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport { EditorState, Editor, RichUtils} from 'draft-js'\nimport { FontAwesomeIcon } from \"react-fontawesome\";\n\nimport {\n  faBold,\n  faUnderline,\n  faItalic,\n  faAnchor\n} from \"free-solid-svg-icons\";\n\nconst inlineStyles = [\n  {\n    label: \"bold\",\n    style: \"BOLD\",\n    icon: <FontAwesomeIcon icon={faBold} />\n  },\n  {\n    label: \"italic\",\n    style: \"ITALIC\",\n    icon: <FontAwesomeIcon icon={faItalic} />\n  },\n  {\n    label: \"Underline\",\n    style: \"UNDERLINE\",\n    icon: <FontAwesomeIcon icon={faUnderline} />\n  }\n];\n\nclass TextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      editorState: EditorState.createEmpty(),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  updateEditorState(editorState){\n    this.setState({editorState});\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n  }\n  // Render the editor.\n  render() {\n    return (\n      <div className=\"editor-container\">\n        <div className=\"toolbar\"></div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <Editor \n          placeholder=\"some text\" \n          editorState={this.state.editorState}\n          onChange={this.updateEditorState.bind(this)}\n          handleKeyCommand={this.handleKeyCommand}\n        ></Editor>\n        {/* <Form>\n          <TextArea style={{ minHeight: 630 }} placeholder='Transcript' value={this.state.value} onChange={this.handleChange}/>\n        </Form> */}\n      </div>\n    )\n  }\n}\n\nexport default TextEditor;"]},"metadata":{},"sourceType":"module"}