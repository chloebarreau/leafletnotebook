{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.state = {\n      audioURL: '',\n      audioText: [],\n      timestamps: [],\n      uploaded: \"false\"\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n    this.playWord = this.playWord.bind(this);\n  }\n\n  handleUpload() {\n    this.setState({\n      uploaded: \"true\"\n    });\n    console.log(\"onchenged\");\n  }\n\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text,\n          timestamps: body.timestamps\n        });\n        console.log(\"Video transcript: \" + this.state.audioText);\n        console.log(\"Timestamps: \" + this.state.timestamps);\n      });\n    });\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.state.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = 0;\n    return React.createElement(\"div\", {\n      className: \"transcript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUploadAudio,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"hidden-new-audio-file\",\n      class: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Upload Audio\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-audio-file\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.handleUploadAudio,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.audioText.map(item => {\n      console.log(indexNumber);\n      if (item.includes(\"2::\") && item.substring(4, item.length) != \"\") return React.createElement(\"li\", {\n        className: \"speaker-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        onClick: this.playWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, word + \" \", console.log(indexNumber + \" \" + word))));else return React.createElement(\"li\", {\n        className: \"speaker-yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.trim().substring(4, item.length).split(\" \").map(word => React.createElement(\"span\", {\n        className: \"word\",\n        id: indexNumber++,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, word + \" \", console.log(indexNumber + \" \" + word))));\n    }))), React.createElement(\"audio\", {\n      controls: true,\n      src: this.state.audioURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Your browser does not support the\", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"audio\"), \" element.\"));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadAudio.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Main","Component","constructor","props","fileInputRef","createRef","state","audioURL","audioText","timestamps","uploaded","handleUpload","bind","handleUploadAudio","playWord","setState","console","log","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","text","filename","event","id","target","render","indexNumber","ref","display","map","item","includes","substring","length","trim","split","word"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      audioURL: '',\n      audioText: [],\n      timestamps: [],\n      uploaded: \"false\",\n    };\n\n\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n    this.playWord = this.playWord.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n  handleUpload() {\n    this.setState({\n      uploaded: \"true\"\n    });\n    console.log(\"onchenged\")\n  }\n\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text,\n          timestamps: body.timestamps\n        });\n        console.log(\"Video transcript: \" + this.state.audioText);\n        console.log(\"Timestamps: \" + this.state.timestamps);\n      });\n    });\n  }\n\n  playWord(event) {\n    const id = event.target.id;\n    console.log(this.state.timestamps[id]);\n  }\n\n  render() {\n    var indexNumber = 0;\n    return (\n      <div className=\"transcript\">\n      <form onSubmit={this.handleUploadAudio} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n        <div>\n          <label for=\"hidden-new-audio-file\" class=\"ui button\">\n            Upload Audio\n          </label>\n          <input type=\"file\" id=\"hidden-new-audio-file\"\n            ref={(ref) => { this.uploadInput = ref; }}\n            onChange={this.handleUploadAudio}\n            style={{ display: \"none\" }}>\n          </input>\n        </div>\n        <br />\n        <ul>\n        {this.state.audioText.map((item) => {\n          console.log(indexNumber)\n          if (item.includes(\"2::\") && item.substring(4, item.length) != \"\")\n            return (<li className=\"speaker-red\">\n              {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++} onClick={this.playWord}>{word + \" \"}{console.log(indexNumber + \" \" + word)}</span>)}\n              </li>)\n          else\n            return (<li className=\"speaker-yellow\">\n              {item.trim().substring(4, item.length).split(\" \").map((word) => <span className=\"word\" id={indexNumber++}>{word + \" \"}{console.log(indexNumber + \" \" + word)}</span>)}\n              </li>)\n        })}\n        </ul>\n        {/*}\n        <ul>\n          {Object.keys(this.state.imageText).map(key =>\n            <li>{key} - {this.state.imageText[key]}</li>\n          )\n          }\n\n        </ul>\n        */}\n      </form>\n      <audio \n                  controls\n                  src={this.state.audioURL}>\n                      Your browser does not support the\n                      <code>audio</code> element.\n              </audio>\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}