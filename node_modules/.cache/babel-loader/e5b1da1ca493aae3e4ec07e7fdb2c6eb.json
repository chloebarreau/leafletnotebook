{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Upload.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.state = {\n      imageURL: '',\n      imageText: '',\n\n      /*test audio*/\n      audioURL: '',\n      audioText: '',\n      uploaded: \"false\"\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n  }\n\n  handleUpload() {\n    this.setState({\n      uploaded: \"true\"\n    });\n    console.log(\"onchenged\");\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body.text);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: body.text\n        });\n        console.log(this.state.imageText);\n        this.props.onDataFetched(this.state.imageText.title);\n        {\n          /* send image's text data to Tools component */\n        }\n      });\n    });\n  }\n  /* tryig audio upload */\n\n\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text\n        });\n        console.log(\"Video transcript:\" + this.state.audioText);\n        /*change back to imageText */\n\n        {\n          /*this.props.onDataFetched(this.state.imageText.title);  send image's text data to Tools component */\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleUploadAudio,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"hidden-new-file\",\n      class: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"upload icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \" Upload Notes\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-file\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.handleUploadAudio,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), this.state.uploaded == \"true\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"0:28 - \\\"my class needs some really good traitors these days\\\"\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"1:09 - \\\"create the best and fairest country\\\"\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"2:13 - \\\"want to live in a world that doesn't need philanthropy\\\"\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"2:41 - \\\"prefer that public schools function...\\\"\"))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/Upload.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Main","Component","constructor","props","fileInputRef","createRef","state","imageURL","imageText","audioURL","audioText","uploaded","handleUpload","bind","handleUploadImage","handleUploadAudio","setState","console","log","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","json","text","filename","onDataFetched","title","render","ref","display"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n      imageText: '',\n      /*test audio*/\n      audioURL: '',\n      audioText: '',\n\n      uploaded: \"false\",\n    };\n\n\n    this.handleUpload = this.handleUpload.bind(this);\n\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n\n\n    this.handleUploadAudio = this.handleUploadAudio.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n\n  handleUpload() {\n    this.setState({\n      uploaded: \"true\"\n    });\n    console.log(\"onchenged\")\n  }\n\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.text);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: body.text,\n        });\n        console.log(this.state.imageText);\n        this.props.onDataFetched(this.state.imageText.title); {/* send image's text data to Tools component */ }\n      });\n    });\n  }\n\n\n  /* tryig audio upload */\n  handleUploadAudio(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.text);\n        this.setState({\n          audioURL: \"http://localhost:5000/static/\" + body.filename,\n          audioText: body.text,\n        });\n        console.log(\"Video transcript:\" + this.state.audioText); /*change back to imageText */\n        {/*this.props.onDataFetched(this.state.imageText.title);  send image's text data to Tools component */ }\n      });\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleUploadAudio} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n        <div>\n          {/* https://benmarshall.me/styling-file-inputs/ */}\n          {/* with this code I'm unable to save the chosen files on my computer, get error \n          <Button as=\"label\" htmlFor=\"file\">\n            Choose File\n          </Button>\n          <input hidden type=\"file\" id=\"file\" onChange={this.uploadInput} />\n          */}\n          <label for=\"hidden-new-file\" class=\"ui blue button\">\n            <i class=\"upload icon\"></i> Upload Notes\n  </label>\n          <input type=\"file\" id=\"hidden-new-file\" \n            ref={(ref) => { this.uploadInput = ref; }} \n            onChange={this.handleUploadAudio} \n            style={{ display: \"none\" }}>\n            </input>\n        </div>\n        <br />\n        {this.state.uploaded == \"true\" &&\n          <div>\n            <ul>\n              <li>0:28 - \"my class needs some really good traitors these days\"</li>\n              <li>1:09 - \"create the best and fairest country\"</li>\n              <li>2:13 - \"want to live in a world that doesn't need philanthropy\"</li>\n              <li>2:41 - \"prefer that public schools function...\"</li>\n            </ul>\n          </div>\n        }\n        {/*}\n          <ul>\n          {Object.keys(this.state.imageText).map(key =>\n            <li>{key} - {this.state.imageText[key]}</li>\n          )\n          }\n        \n        </ul>\n        */}\n\n        {/*}.map((items, index) => {\n          return (\n            <ul key={index}>\n              {Object.keys(items).map((key) => {\n                return (\n                  <li key={key + index}>{key}:{items[key]}</li>\n                )\n              })}\n            </ul>\n          )\n        })}*/}\n\n      </form>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}