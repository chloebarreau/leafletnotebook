{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/TextEditor.jsx\";\n// Import React!\nimport React from 'react';\nimport { Form, TextArea } from 'semantic-ui-react'; // Define our app...\n\nclass TextEditor extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: initialValue\n    };\n\n    this.onChange = ({\n      value\n    }) => {\n      this.setState({\n        value\n      });\n    };\n  }\n\n  // Render the editor.\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      placeholder: \"Tell us more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TextEditor;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/TextEditor.jsx"],"names":["React","Form","TextArea","TextEditor","Component","state","value","initialValue","onChange","setState","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B,C,CAEA;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,KAAK,EAAEC;AADD,KAF+B;;AAAA,SAOvCC,QAPuC,GAO5B,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAe;AACxB,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KATsC;AAAA;;AAWvC;AACAI,EAAAA,MAAM,GAAG;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,CADJ;AAOD;;AApBsC;;AAuBzC,eAAeP,UAAf","sourcesContent":["// Import React!\nimport React from 'react'\nimport { Form, TextArea } from 'semantic-ui-react'\n\n// Define our app...\nclass TextEditor extends React.Component {\n  // Set the initial value when the app is first constructed.\n  state = {\n    value: initialValue,\n  }\n\n  // On change, update the app's React state with the new editor value.\n  onChange = ({ value }) => {\n    this.setState({ value })\n  }\n\n  // Render the editor.\n  render() {\n    return (\n        <div>\n        <Form>\n        <TextArea placeholder='Tell us more' />\n      </Form>\n      </div>\n        )\n  }\n}\n\nexport default TextEditor;"]},"metadata":{},"sourceType":"module"}