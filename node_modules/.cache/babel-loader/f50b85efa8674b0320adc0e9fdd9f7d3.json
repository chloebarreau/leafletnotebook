{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/QuoteBank.jsx\";\nimport React from 'react';\nimport { Card, Button, Segment, Header, Icon } from 'semantic-ui-react';\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([this.state.quotes.map(quote => quote.value + \"\\n\\n\")], {\n        type: 'text/plain'\n      });\n      console.log(quotes);\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.state = {\n      count: 0,\n      quotes: []\n    };\n    this.addQuote = this.addQuote.bind(this);\n  }\n\n  addQuote() {\n    var selection = window.getSelection().toString();\n    const newQuote = {\n      'id': this.state.count + 1,\n      'value': selection\n    };\n    console.log(newQuote);\n    this.setState({\n      quotes: [...this.state.quotes, newQuote],\n      count: this.state.count + 1\n    });\n  }\n\n  delete(item) {\n    const quotes = this.state.quotes.filter(i => i !== item);\n    this.setState({\n      quotes\n    });\n    console.log(\"item: \" + item.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        overflow: 'auto',\n        maxHeight: '50vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Quote Bank\"), React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.addQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Add Quote\"), React.createElement(Button, {\n      size: \"mini\",\n      onClick: this.downloadTxtFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share square outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Highlight quotes and add them here!\"), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.quotes.map(quote => React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, quote.value, React.createElement(Button, {\n      basic: true,\n      icon: true,\n      color: \"red\",\n      size: \"mini\",\n      floated: \"right\",\n      onClick: this.delete.bind(this, quote),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"trash alternate outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/QuoteBank.jsx"],"names":["React","Card","Button","Segment","Header","Icon","News","Component","constructor","props","downloadTxtFile","element","document","createElement","file","Blob","state","quotes","map","quote","value","type","console","log","href","URL","createObjectURL","download","body","appendChild","click","count","addQuote","bind","selection","window","getSelection","toString","newQuote","setState","delete","item","filter","i","id","render","overflow","maxHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Segment, Header, Icon } from 'semantic-ui-react'\n\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      quotes: []\n    };\n    this.addQuote = this.addQuote.bind(this)\n  }\n\n  addQuote() {\n    var selection = window.getSelection().toString();\n    const newQuote = { 'id': this.state.count + 1, 'value': selection };\n    console.log(newQuote);\n    this.setState({\n      quotes: [...this.state.quotes, newQuote],\n      count: this.state.count + 1\n    });\n  }\n\n  delete(item) {\n    const quotes = this.state.quotes.filter(i => i !== item)\n    this.setState({ quotes })\n    console.log(\"item: \" + item.id)\n  }\n\n  downloadTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([this.state.quotes.map((quote) => (quote.value + \"\\n\\n\"))], {type: 'text/plain'});\n    console.log(quotes)\n    element.href = URL.createObjectURL(file);\n    element.download = \"myFile.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ overflow: 'auto', maxHeight: '50vh' }}>\n          <Header as='h3'>Quote Bank</Header>\n        \n          \n          <Button size='mini' onClick={this.addQuote}>Add Quote</Button>\n          <Button size='mini' onClick={this.downloadTxtFile}><Icon name='share square outline icon' /></Button>\n          <p>Highlight quotes and add them here!</p>\n          <Card.Group>\n            {this.state.quotes.map((quote) => (\n              <Card fluid>\n                <Card.Content>\n                  <Card.Description>{quote.value}\n                  \n                  <Button basic icon color='red' size=\"mini\" floated='right' onClick={this.delete.bind(this, quote)}>\n                    <Icon name='trash alternate outline' />\n                  </Button>\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Segment>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}