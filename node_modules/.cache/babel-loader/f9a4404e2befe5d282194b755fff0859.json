{"ast":null,"code":"var _jsxFileName = \"/Users/chloebarreau/Downloads/leafletnotebook/src/components/UploadAudio.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react';\nimport Highlight from 'react-highlighter';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob(this.props.audioText.map(item => item + \"\\n\"), {\n        type: 'text/plain'\n      });\n      console.log(this.props.quotes);\n      element.href = URL.createObjectURL(file);\n      element.download = \"transcript.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.state = {\n      playing: false\n    };\n  }\n\n  componentDidMount() {\n    // pass the requested ref here\n    this.props.passRefUpward(this.refs);\n    console.log(this.refs);\n  }\n\n  render() {\n    var indexNumber = -1;\n    return React.createElement(\"div\", {\n      className: \"transcript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"no-border\",\n      style: {\n        overflow: 'auto',\n        maxHeight: '90vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.uploaded == \"false\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"hidden-new-audio-file\",\n      class: \"ui button green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Upload Audio\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-audio-file\" //ref={(ref) => { this.uploadInput = ref; }}\n      ,\n      ref: this.props.setRef,\n      onChange: this.props.handleUploadAudio // changed to call props\n      ,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"div\", {\n      className: \"right-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      size: \"mini\",\n      onClick: this.downloadTxtFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share square outline icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(\"form\", {\n      onSubmit: this.handleUploadAudio,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.audioText.map((item, index) => {\n      if (item.includes(\"2:: \") && item.substring(4, item.length) != \"\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: index,\n        className: \"speaker-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timestamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.timestamps[indexNumber], \"0:04 \", React.createElement(Button, {\n        floated: \"right\",\n        style: {\n          marginTop: \"2px\",\n          marginRight: '5px'\n        },\n        size: \"mini\",\n        circular: true,\n        icon: \"newspaper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), item.trim().substring(4, item.length).split(\" \").map(word => {\n        var className = this.props.highlighted == indexNumber + 1 ? 'highlight' : 'not-highlight';\n        return React.createElement(\"span\", {\n          className: className,\n          id: indexNumber++,\n          ref: indexNumber,\n          onClick: this.props.playWord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \" \" + word);\n      })));else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: index,\n        className: \"speaker-yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timestamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.props.timestamps[indexNumber], \"0:04\"), item.trim().substring(4, item.length).split(\" \").map(word => {\n        var className = this.props.highlighted == indexNumber + 1 ? 'highlight' : 'not-highlight';\n        return React.createElement(\"span\", {\n          className: className,\n          id: indexNumber++,\n          ref: indexNumber,\n          onClick: this.props.playWord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \" \" + word);\n      })));\n    }))))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/chloebarreau/Downloads/leafletnotebook/src/components/UploadAudio.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Highlight","Main","Component","constructor","props","fileInputRef","createRef","downloadTxtFile","element","document","createElement","file","Blob","audioText","map","item","type","console","log","quotes","href","URL","createObjectURL","download","body","appendChild","click","state","playing","componentDidMount","passRefUpward","refs","render","indexNumber","overflow","maxHeight","display","flexDirection","justifyContent","uploaded","setRef","handleUploadAudio","title","index","includes","substring","length","timestamps","marginTop","marginRight","trim","split","word","className","highlighted","playWord"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment } from 'semantic-ui-react'\nimport Highlight from 'react-highlighter'\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n    };\n  }\n\n  fileInputRef = React.createRef();\n\n componentDidMount() {\n  // pass the requested ref here\n  this.props.passRefUpward(this.refs);\n  console.log(this.refs)\n\n} \n\n  downloadTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob(this.props.audioText.map((item) => (item + \"\\n\")), { type: 'text/plain' });\n    console.log(this.props.quotes)\n    element.href = URL.createObjectURL(file);\n    element.download = \"transcript.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  render() {\n    var indexNumber = -1;\n\n    return (\n      <div className=\"transcript\">\n        <Segment className=\"no-border\" style={{ overflow: 'auto', maxHeight: '90vh' }}>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n            {this.props.uploaded == \"false\" && <div>\n              <label for=\"hidden-new-audio-file\" class=\"ui button green\">\n                Upload Audio\n          </label>\n              <input type=\"file\" id=\"hidden-new-audio-file\"\n                //ref={(ref) => { this.uploadInput = ref; }}\n                ref={this.props.setRef}\n                onChange={this.props.handleUploadAudio} // changed to call props\n                style={{ display: \"none\" }}>\n              </input>\n            </div>\n            }\n\n            <h2>{this.props.title}</h2>\n            <div className=\"right-btn\">\n              <Button icon size='mini' onClick={this.downloadTxtFile}><Icon name='share square outline icon' /></Button>\n            </div>\n          </div>\n          <form onSubmit={this.handleUploadAudio} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n            <br />\n            <ul>\n              <div>\n\n                {this.props.audioText.map((item, index) => {\n                  if ((item.includes(\"2:: \")) && item.substring(4, item.length) != \"\")\n                    return (<div>\n                      <li key={index} className=\"speaker-red\">\n                        <div className=\"timestamp\">\n                          {this.props.timestamps[indexNumber]}0:04 {/* FAKE TIMESTAMP FOR DEMO PUPROSES*/}\n                          <Button floated='right' style={{marginTop:\"2px\",marginRight:'5px'}}\n                          size='mini' circular icon='newspaper' />\n                        </div>\n                        {item.trim().substring(4, item.length).split(\" \").map((word) => {\n                          var className = this.props.highlighted == indexNumber+1 ? 'highlight' : 'not-highlight';\n                          return <span className={className} id={indexNumber++} ref={indexNumber} onClick={this.props.playWord}>{\" \" + word}</span>})}\n                      </li>\n                    </div>)\n                  else\n                    return (\n                      <div>\n                        <li key={index} className=\"speaker-yellow\">\n                          <div className=\"timestamp\">\n                            {this.props.timestamps[indexNumber]}0:04\n                      </div>\n                          {item.trim().substring(4, item.length).split(\" \").map((word) => {\n                            var className = this.props.highlighted == indexNumber+1 ? 'highlight' : 'not-highlight';\n                            return <span className={className} id={indexNumber++} ref={indexNumber} onClick={this.props.playWord}>{\" \" + word}</span>})}\n                        </li>\n                      </div>)\n                })}\n\n              </div>\n            </ul>\n            {/*}\n        <ul>\n          {Object.keys(this.state.imageText).map(key =>\n            <li>{key} - {this.state.imageText[key]}</li>\n          )\n          }\n\n        </ul>\n        */}\n          </form>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}