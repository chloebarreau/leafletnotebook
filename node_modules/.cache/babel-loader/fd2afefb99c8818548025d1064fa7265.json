{"ast":null,"code":"var _jsxFileName = \"/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadNotes.jsx\";\n// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment, Header, Grid, Popup } from 'semantic-ui-react';\n\nclass UploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.state = {\n      imageURL: '',\n      imageText: '',\n      uploaded: \"false\"\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      imageURL: \"http://localhost:5000/static/\" + body.filename,\n      imageText: body.text,\n      uploaded: \"true\"\n    });\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body.text);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: body.text,\n          uploaded: \"true\"\n        });\n        console.log(this.state.imageText);\n        this.props.onDataFetched(this.state.imageText.title);\n        {\n          /* send image's text data to Tools component */\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      padded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUploadImage,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Notes\"), React.createElement(\"div\", {\n      className: \"right-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      content: \"This links timestamps in your notes to the audio\",\n      wide: true,\n      position: \"left center\",\n      trigger: React.createElement(Button, {\n        circular: true,\n        size: \"mini\",\n        icon: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      for: \"hidden-new-file\",\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Upload Notes\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"hidden-new-file\",\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      onChange: this.handleClick // change back to onChange={this.handleUploadImage} \n      ,\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), this.state.uploaded == \"true\" && React.createElement(Segment, {\n      className: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"0:28\"), \" - \", React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\\"my class needs some really good traitors these days\\\"\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"1:09\"), \" - \", React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\\"create the best and fairest country\\\"\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"2:13\"), \" - \", React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\\"want to live in a world that doesn't need philanthropy\\\"\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"2:41\"), \" - \", React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\\"prefer that public schools function...\\\"\"))))))));\n  }\n\n}\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/gkzhou/Dropbox/Code/leafletnotebook/src/components/UploadNotes.jsx"],"names":["React","Button","Input","Icon","Menu","Segment","Header","Grid","Popup","UploadImage","Component","constructor","props","fileInputRef","createRef","state","imageURL","imageText","uploaded","handleUploadImage","bind","handleClick","setState","body","filename","text","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","then","response","json","console","log","onDataFetched","title","render","display","flexDirection","justifyContent","ref"],"mappings":"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","sourcesContent":["// Main code from https://medium.com/excited-developers/file-upload-with-react-flask-e115e6f2bf99\nimport React from 'react';\nimport { Button, Input, Icon, Menu, Segment, Header, Grid, Popup } from 'semantic-ui-react'\n\nclass UploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n      imageText: '',\n      uploaded: \"false\",\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  fileInputRef = React.createRef();\n\n  handleClick() {\n    this.setState({\n      imageURL: \"http://localhost:5000/static/\" + body.filename,\n      imageText: body.text,\n      uploaded: \"true\"\n    });\n  }\n\n  handleUploadImage(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.text);\n        this.setState({\n          imageURL: \"http://localhost:5000/static/\" + body.filename,\n          imageText: body.text,\n          uploaded: \"true\"\n        });\n        console.log(this.state.imageText);\n        this.props.onDataFetched(this.state.imageText.title); {/* send image's text data to Tools component */ }\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column>\n            <form onSubmit={this.handleUploadImage} encType=\"multipart/form-data\"> {/* change Audio to Text to revert*/}\n\n              <div>\n              <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                <Header as='h3'>Notes</Header>\n                <div className=\"right-btn\">\n                <Popup content='This links timestamps in your notes to the audio' wide position='left center' trigger={<Button circular size='mini' icon='question' />} />\n                </div>\n              </div>\n\n                <label for=\"hidden-new-file\" className=\"ui button\">\n                  Upload Notes\n          </label>\n                <input type=\"file\" id=\"hidden-new-file\"\n                  ref={(ref) => { this.uploadInput = ref; }}\n                  onChange={this.handleClick}  // change back to onChange={this.handleUploadImage} \n                  style={{ display: \"none\" }}>\n                </input>\n\n              </div>\n              <br />\n             \n        {this.state.uploaded == \"true\" &&\n        <Segment className=\"notes\">\n            <ul>\n              <li><div className=\"timestamp\">0:28</div> - <div className=\"note\">\"my class needs some really good traitors these days\"</div></li>\n              <li><div className=\"timestamp\">1:09</div> - <div className=\"note\">\"create the best and fairest country\"</div></li>\n              <li><div className=\"timestamp\">2:13</div> - <div className=\"note\">\"want to live in a world that doesn't need philanthropy\"</div></li>\n              <li><div className=\"timestamp\">2:41</div> - <div className=\"note\">\"prefer that public schools function...\"</div></li>\n            </ul>\n          </Segment>\n        }\n      {/*}\n              {this.state.uploaded == \"true\" &&\n                <Segment className=\"notes\">\n                  <ul>\n                    {Object.keys(this.state.imageText).map(key => {\n                      if (key !== \"title\")\n                        return (\n                          <li>\n                            <div className=\"timestamp\">\n                              {key}\n                            </div>\n                            <div className=\"note\">\n                              {this.state.imageText[key]}\n                            </div>\n                          </li>)\n                      return\n                    }\n                    )\n                    }\n                  </ul>\n                </Segment>\n              }\n            */}\n              {/*}.map((items, index) => {\n          return (\n            <ul key={index}>\n              {Object.keys(items).map((key) => {\n                return (\n                  <li key={key + index}>{key}:{items[key]}</li>\n                )\n              })}\n            </ul>\n          )\n        })}*/}\n\n            </form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}